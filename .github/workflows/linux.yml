name: Linux GitHub CI

on: [pull_request,push,workflow_dispatch]

env:
  MAVEN_OPTS: -Dmaven.wagon.httpconnectionManager.ttlSeconds=25 -Dmaven.wagon.http.retryHandler.count=3 -Xmx512m -Dorg.slf4j.simpleLogger.showDateTime=true -Dorg.slf4j.simpleLogger.dateTimeFormat=HH:mm:ss,SSS
  TAKARI_SMART_BUILDER_VERSION: 0.6.1

jobs:
  build:
    runs-on: ${{ matrix.os }}
    permissions:
      id-token: write
      contents: read
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            jdk: 8
    steps:
    - uses: actions/checkout@v2
      with:
        # 500 commits, set to 0 to get all
        fetch-depth: 500
        submodules: 'recursive'
    - name: Set up JDK
      uses: actions/setup-java@v2
      with:
        java-version: ${{ matrix.jdk }}
        distribution: "adopt"
        cache: maven
    - name: Set up Maven
      uses: stCarolas/setup-maven@v4.2
      with:
        maven-version: 3.8.2
    - name: Maven repository caching
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Build with Maven
      run: mvn -B -V install -DskipTests=true -Dmaven.javadoc.skip=true
    - name: Remove SNAPSHOT jars from repository
      run: |
        find ~/.m2/repository -name "*SNAPSHOT*" -type d | xargs rm -rf {}
    - name: Remove Schema 3.8 jars from repository
      run: |
        find ~/.m2/repository -name "*3.8*" -type d | xargs rm -rf {}
    - name: create maven artifacts
      uses: actions/upload-artifact@v2
      with:
        name: create war file
        path: target/geonetwork.war
    - name: "Configure AWS Credentials"
      uses: aws-actions/configure-aws-credentials@master
      with:
        role-to-assume: arn:aws:iam::664974615300:role/github-s3-copy-role
        role-session-name: GithubActionDeployment
        aws-region: ap-southeast-2
    - name: Copy files to the test website with the AWS CLI
      run: |
        aws s3 cp target/geonetwork.war s3://inapp-war-files/    
        
